- name: Install dependencies
  ansible.builtin.apt:
    name:
      - ca-certificates
      - curl
    update_cache: true
    cache_valid_time: 3600
    state: present
  become: true

- name: Ensure default Debian Docker packages are uninstalled
  ansible.builtin.apt:
    name:
      - docker
      - docker.io
      - docker-compose
      - docker-registry
    update_cache: true
    cache_valid_time: 3600
    state: absent
  become: true

- name: Add signing key
  ansible.builtin.get_url:
    url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
    dest: /etc/apt/keyrings/docker.asc
    mode: "0644"
  become: true

- name: Find dpkg architecture for the apt repo
  ansible.builtin.shell: dpkg --print-architecture
  register: dpkg_print_architecture

- name: Add repository into sources list
  ansible.builtin.apt_repository:
    repo: "deb [arch={{ dpkg_print_architecture.stdout }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
    state: present
    filename: docker
  register: repo_result
  become: true

- name: Install official Docker CE packages
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    update_cache: true
    cache_valid_time: "{{ 0 if repo_result.changed else 3600 }}"
  become: true
  register: install_result

- name: Enable Docker service
  ansible.builtin.systemd_service:
    name: docker.service
    state: started
    enabled: true
  become: true

- name: Enable containerd service
  ansible.builtin.systemd_service:
    name: containerd.service
    state: started
    enabled: true
  become: true

- name: Reboot system after Docker installation
  ansible.builtin.reboot:
  become: true
  when: install_result.changed
