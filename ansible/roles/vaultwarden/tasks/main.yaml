- name: Create user "service-vaultwarden" for Vaultwarden
  ansible.builtin.user:
    name: service-vaultwarden
    create_home: false
    comment: "Vaultwarden user"
    state: present
  become: true
  register: vaultwarden_user_result

- name: Set Vaultwarden user variables
  ansible.builtin.set_fact:
    vaultwarden_user_uid: "{{ vaultwarden_user_result.uid }}"
    vaultwarden_user_gid: "{{ vaultwarden_user_result.group }}"
    vaultwarden_user_name: "{{ vaultwarden_user_result.name }}"

- name: Create /opt/vaultwarden directory for Vaultwarden
  ansible.builtin.file:
    path: /opt/vaultwarden
    state: directory
    mode: "0775"
  become: true

- name: Create /opt/vaultwarden/data directory for Vaultwarden data directory
  ansible.builtin.file:
    path: /opt/vaultwarden/data
    state: directory
    mode: "0755"
    owner: "{{ vaultwarden_user_name }}"
    group: "{{ vaultwarden_user_gid }}"
  become: true

- name: Create Vaultwarden Docker Compose file
  ansible.builtin.template:
    src: files/docker-compose.yaml.j2
    dest: /opt/vaultwarden/docker-compose.yaml
    mode: "0664"
    # validate: docker compose -f %s config
  become: true
  notify: Restart Vaultwarden

- name: Install SQLite CLI
  ansible.builtin.apt:
    name: sqlite3
    state: present
    cache_valid_time: 3600
  become: true

- name: Create Vaultwarden database backup script
  ansible.builtin.template:
    src: files/backup.sh.j2
    dest: /opt/vaultwarden/backup.sh
    mode: "0555"
  become: true

- name: Backup Vaultwarden database every 12 hours with cron
  ansible.builtin.cron:
    name: "Backup Vaultwarden database"
    minute: "0"
    hour: "0,12"
    job: "/opt/vaultwarden/backup.sh"
  become: true
